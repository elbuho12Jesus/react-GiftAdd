{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","evento","preventDefault","trim","length","category","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gift","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,sBAAMC,SARS,SAACC,GAChBA,EAAOC,iBACJJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAACS,GAAD,OAAaP,GAAb,mBAA2BO,OACzCN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAfY,SAACP,GACrBF,EAAcE,EAAOQ,OAAOF,a,SCJvBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,mCCNHK,EAAO,uCAAC,WAAOZ,GAAP,uBAAAa,EAAA,6DACXL,EADW,iDACoCM,UAAUd,GAD9C,+DAEAe,MAAMP,GAFN,cAEXQ,EAFW,gBAGEA,EAAKC,OAHP,uBAGVC,EAHU,EAGVA,KACDC,EAAKD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QARzB,kBAWVW,GAXU,4CAAD,sDCIPK,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZR,mBAAS,CAC/B0B,KAAK,GACLO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAatC,OARAC,qBAAU,WACFhB,EAAQZ,GAAU6B,MAAK,SAAAC,GACnB,OAAOH,EAAS,CACZT,KAAMY,EACNL,SAAS,SAGvB,CAACzB,IACI0B,EDXqBK,CAAa/B,GAA7BsB,EADuB,EAC5BJ,KAAYO,EADgB,EAChBA,QACnB,OACI,qCACA,oBAAIhB,UAAU,oCAAd,SAAmDT,IAClDyB,GAAW,mBAAGhB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACSa,EAAOF,KAAI,SAACC,GACT,OAAQ,cAAC,EAAD,eAEAA,GADCA,EAAIf,aETpB0B,EAAe,WAAO,IAAD,EACMxC,mBAAS,CAAC,cADhB,mBACvByC,EADuB,KACXC,EADW,KAK9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAa3C,cAAe2C,IAC5B,uBACA,6BAEQD,EAAWb,KAAI,SAAApB,GACX,OAAQ,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCbzCmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2c870a0b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange=(evento)=>{        \r\n        setinputValue(evento.target.value);\r\n    }\r\n    const handleSubmit=(evento)=>{\r\n        evento.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories((category)=>[inputValue,...category]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>        \r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs=async (category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=n1bJNcRFoEHzIhEIakjBbQbSMmoviTc7`;\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n    const gift=data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url               \r\n        }\r\n    });\r\n    return gift;    \r\n}","import React, {useState,useEffect} from 'react'\r\nimport {GifGridItem} from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images,loading}=useFetchGifs(category);   \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>  \r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}          \r\n        <div className=\"card-grid\">            \r\n                {images.map((img)=>{\r\n                    return (<GifGridItem\r\n                        key={img.id} \r\n                        {...img}\r\n                        />);\r\n                })}                        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { findAllByTestId } from '@testing-library/dom';\r\nimport {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n    useEffect(()=>{        \r\n            getGifs(category).then(imgs=>{\r\n                return setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });        \r\n    },[category]);\r\n    return state; //{date:[],loading: true}\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {     \r\n    const [categories, setcategories] = useState(['One Punch']);\r\n    // const handleAdd=()=>{\r\n    //     setcategories([...categories,\"Death Note\"]);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setcategories} />\r\n            <hr />            \r\n            <ol>\r\n                {\r\n                    categories.map(category=>{\r\n                        return (<GifGrid \r\n                                    key={category}\r\n                                    category={category}\r\n                            />)\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {GifExpertApp} from './GifExpertApp';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GifExpertApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}